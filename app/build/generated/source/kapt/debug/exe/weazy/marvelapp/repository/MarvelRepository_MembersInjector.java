// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package exe.weazy.marvelapp.repository;

import dagger.MembersInjector;
import exe.weazy.marvelapp.db.AppDatabase;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class MarvelRepository_MembersInjector implements MembersInjector<MarvelRepository> {
  private final Provider<Retrofit> retrofitProvider;

  private final Provider<String> publicApiKeyProvider;

  private final Provider<String> privateApiKeyProvider;

  private final Provider<AppDatabase> databaseProvider;

  public MarvelRepository_MembersInjector(
      Provider<Retrofit> retrofitProvider,
      Provider<String> publicApiKeyProvider,
      Provider<String> privateApiKeyProvider,
      Provider<AppDatabase> databaseProvider) {
    assert retrofitProvider != null;
    this.retrofitProvider = retrofitProvider;
    assert publicApiKeyProvider != null;
    this.publicApiKeyProvider = publicApiKeyProvider;
    assert privateApiKeyProvider != null;
    this.privateApiKeyProvider = privateApiKeyProvider;
    assert databaseProvider != null;
    this.databaseProvider = databaseProvider;
  }

  public static MembersInjector<MarvelRepository> create(
      Provider<Retrofit> retrofitProvider,
      Provider<String> publicApiKeyProvider,
      Provider<String> privateApiKeyProvider,
      Provider<AppDatabase> databaseProvider) {
    return new MarvelRepository_MembersInjector(
        retrofitProvider, publicApiKeyProvider, privateApiKeyProvider, databaseProvider);
  }

  @Override
  public void injectMembers(MarvelRepository instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.retrofit = retrofitProvider.get();
    instance.publicApiKey = publicApiKeyProvider.get();
    instance.privateApiKey = privateApiKeyProvider.get();
    instance.database = databaseProvider.get();
  }
}
